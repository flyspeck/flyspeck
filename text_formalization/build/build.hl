(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: All Chapters                                                      *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-07-14                                                           *)
(* ========================================================================== *)


(* 
   Build file for Flyspeck project.

   hol-light should already be loaded
   #use "hol.ml";;

  build/strictbuild.hl should be used to load the files here.

   Make sure the reference load_path points to the
   flyspeck/text_formalization dir. If the "FLYSPECK_DIR" environment
   variable is set to this directory then this can be done with

   let add_to_load_path path =
   if mem path !load_path then ()
   else load_path := path :: !load_path;;

   map add_to_load_path 
   [flyspeck_dir;
   (Filename.concat flyspeck_dir "../formal_ineqs");
   (Filename.concat flyspeck_dir "../jHOLLight/")
   ];;

   Multivariate/flyspeck.ml is needed everywhere.
   
 *)

module Build = struct
 
let build_sequence_full = 
  ["general/hol_pervasives.hl";
   "general/lib.hl";
   "general/flyspeck_lib.hl";
   "general/print_types.hl";
   "general/sphere.hl";
   "general/hales_tactic.hl";
   "general/truong_tactic.hl"; 

   "leg/basics.hl";
   "leg/geomdetail.hl";
   "leg/AFF_SGN_TAC.hl";
   "leg/affprops.hl";
   "leg/cayleyR_def.hl";
   "leg/muR_def.hl";
   "leg/enclosed_def.hl";
   "leg/collect_geom.hl";
   "leg/collect_geom2.hl"; 

   "jordan/refinement.hl"; 
   "jordan/lib_ext.hl"; 
   "jordan/hash_term.hl"; 
   "jordan/parse_ext_override_interface.hl"; 
   "jordan/goal_printer.hl"; 
   "jordan/real_ext.hl";  
   "jordan/tactics_jordan.hl"; 
   "jordan/num_ext_nabs.hl";   
   "jordan/taylor_atn.hl";
   "jordan/float.hl"; 
   "jordan/flyspeck_constants.hl";
   "jordan/misc_defs_and_lemmas.hl"; 

   "general/tactics.hl";
   "general/vukhacky_tactics.hl" ;

   "trigonometry/trig1.hl";
   "trigonometry/trig2.hl";
   "trigonometry/delta_x.hl";
   "trigonometry/euler_complement.hl";
   "trigonometry/euler_multivariate.hl";
   "trigonometry/euler_main_theorem.hl";
   "trigonometry/trig3.hl";
   "trigonometry/HVIHVEC.hl";

   "nonlinear/calc_derivative.hl";
   "nonlinear/ineqdata3q1h.hl";
   "nonlinear/types.hl";
   "nonlinear/nonlin_def.hl";
   "nonlinear/ineq.hl";
   "nonlinear/main_estimate_ineq.hl";
   "nonlinear/nonlinear_lemma.hl";  (* needs trig1, trig2 *)
   "nonlinear/functional_equation.hl";
   "nonlinear/parse_ineq.hl";
   "nonlinear/optimize.hl";
   "nonlinear/function_list.hl";
(*   "nonlinear/auto_lib.hl"; removed Dec 22, 2015. *)
   "nonlinear/merge_ineq.hl";

   "volume/vol1.hl";

   "hypermap/hypermap.hl";  

   "fan/fan_defs.hl";
   "fan/fan.hl";
   "fan/GMLWKPK.hl";
   "fan/topology.hl";
   "fan/fan_misc.hl";
   "fan/planarity.hl";   
   "fan/hypermap_and_fan.hl";
   "fan/Conforming.hl";
   "fan/polyhedron.hl";

   "packing/pack1.hl"; 
   "packing/pack2.hl"; 
   "packing/pack_defs.hl";
   "packing/pack_concl.hl";
   "packing/pack3.hl";  (* needs pack_defs.hl *)
   "packing/Rogers.hl";
   "packing/TARJJUW.hl"; 
   "packing/marchal1.hl";
   "packing/UPFZBZM_support_lemmas.hl";
   "packing/EMNWUUS.hl";
   "packing/marchal2.hl"; 
   "packing/SLTSTLO.hl";
   "packing/LEPJBDJ.hl";
   "packing/URRPHBZ1.hl";
   "packing/URRPHBZ2.hl";
   "packing/HDTFNFZ.hl";
   "packing/URRPHBZ3.hl";
   "packing/RVFXZBU.hl"; 

   "local/WRGCVDR.hl";  (* These 4 were moved up on Jan 1, 2013 *)
   "local/LVDUCXU.hl";
   "local/LDURDPN.hl";
   "local/local_lemmas.hl"; 
   "tame/Inequalities.hl"; (* moved Feb 6, 2013 *)
   
   "packing/YNHYJIT.hl";  
   "packing/NJIUTIU.hl";
   "packing/TEZFFSK.hl";
   "packing/QZKSYKG.hl";
   "packing/DDZUPHJ.hl";
   "packing/AJRIPQN.hl";
   "packing/QZYZMJC.hl";
   "packing/marchal3.hl";
   "packing/GRUTOTI.hl"; 
   "packing/KIZHLTL.hl";
   "packing/bump.hl";
   "packing/sum_gamma.hl";
   "packing/UPFZBZM.hl";
   "packing/RDWKARC.hl";

   "local/local_lemmas1.hl";  
   "local/NKEZBFC.hl";
   "tame/arc_properties.hl"; 
   "fan/CFYXFTY.hl";  (* needs Nkezbfc_local and Local_lemmas *)

   "packing/YSSKQOY.hl"; (* needs arc_properties.hl *)
   "packing/counting_spheres.hl";
   "packing/REUHADY.hl";
   "packing/TSKAJXY1.hl";
   "packing/TSKAJXY2.hl";
   "packing/OXLZLEZ1.hl";
   "packing/OXLZLEZ2.hl"; 
   "packing/leaf_cell.hl";
   "packing/TSKAJXY3.hl";
   "packing/OXLZLEZ3.hl";

   "local/dih2k.hl"; 
   "local/WJSCPRO.hl";
   "local/TECOXBM.hl";
   "local/VPWSHTO.hl";
   "local/LFJCIXP.hl";
   "local/localization.hl";
   "local/polar_fan.hl"; (*  needs Tecoxbm *)
   "local/HDPLYGY.hl";
   "local/GBYCPXS.hl";
   "local/MTUWLUN.hl";
   "local/PCRTTID.hl";
   "local/XIVPHKS.hl";  (* added 2013-06-11 *)

   "tame/tame_defs.hl";
   "tame/tame_concl.hl";  (* not used *)
   "../jHOLLight/caml/ssreflect.hl";
   "../jHOLLight/caml/sections.hl";
   "../jHOLLight/Examples/ssrfun-compiled.hl";
   "../jHOLLight/Examples/ssrbool-compiled.hl";
   "../jHOLLight/Examples/ssrnat-compiled.hl";
   "fan/hypermap_iso-compiled.hl";
   "tame/CKQOWSA_3.hl";
   "tame/CKQOWSA_4.hl";
   "tame/CKQOWSA.hl";
   "tame/tame_general.hl";
   "tame/JGTDEBU.hl";
   "tame/tame_opposite.hl";
   "tame/FATUGPD.hl"; 
   "tame/CRTTXAT.hl";
   "tame/HRXEFDM.hl";  

   "../jHOLLight/Examples/seq-compiled.hl";
   "tame/ssreflect/seq2-compiled.hl";
   "tame/ssreflect/sort-compiled.hl";

   "tame/ssreflect/FNJLBXS-compiled.hl"; 
   "../formal_lp/hypermap/ssreflect/add_triangle-compiled.hl";
   "tame/ssreflect/tame_lemmas-compiled.hl";
   "tame/CDTETAT.hl"; (* added to build 3/2014 *)

   (* Local Fan Appendix *)
   "local/appendix.hl"; 
   "local/terminal.hl";
   "local/pent_hex.hl"; (* added 2013-06-13 *)
   "local/lp_details.hl"; (* added 2013-06-19 *)

   (* Linear programming results 
      (could be moved down but it is better to load them here since
      they require quite a lot of memory which is freed after the final
      result is constructed) *)

(* LP SECTION: *)
   "../formal_lp/hypermap/arith_link.hl"; 
   "../formal_lp/glpk/glpk_link.ml";
   "../formal_graph/archive/archive_all.ml";
   "../formal_lp/glpk/lpproc.ml";
   "../formal_lp/hypermap/ssreflect/list_hypermap-compiled.hl";
   "../formal_lp/hypermap/ssreflect/list_hypermap_iso-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_defs.hl";
   "../formal_lp/ineqs/constants_approx.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_proofs-compiled.hl";
   "local/RNSYJXM-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_main_estimate-compiled.hl";
   "../formal_lp/ineqs/delta_ineq.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_proofs2-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_quads-compiled.hl";
   "../formal_lp/hypermap/computations/more_theory-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_gen_theory-compiled.hl";
   "../formal_lp/hypermap/computations/list_conversions2.hl";
   "../formal_lp/hypermap/computations/list_hypermap_computations.hl";
   "tame/good_list_archive.hl";
   "../formal_lp/hypermap/ineqs/lp_gen_ineqs.hl";
   "../formal_lp/hypermap/ineqs/lp_approx_ineqs.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs.hl";
   "../formal_lp/hypermap/ineqs/lp_head_ineqs.hl";
   "../formal_lp/hypermap/ineqs/lp_body_ineqs_data.hl";
   "../formal_lp/hypermap/ineqs/lp_body_ineqs.hl";
   "../formal_lp/hypermap/main/lp_certificate.hl";
   "../formal_lp/hypermap/computations/informal_computations.hl";
   "../formal_lp/more_arith/lin_f.hl";
   "../formal_lp/more_arith/arith_int.hl";
   "../formal_lp/more_arith/prove_lp.hl";
   "../formal_lp/hypermap/main/prove_flyspeck_lp.hl";
   "../formal_lp/hypermap/verify_all.hl";
   "tame/linear_programming_results.hl";
(* END LP SECTION: *)

   "local/ZITHLQN.hl";
   "local/XWITCCN.hl";  
   "local/AYQJTMD.hl";
   "local/JKQEWGV.hl";
   "local/UXCKFPE.hl";
   "local/SGTRNAF.hl";
   "local/QKNVMLB.hl";
   "local/YXIONXL.hl";
   "local/HXHYTIJ.hl"; 
   "local/UAGHHBM.hl";
   "local/LKGRQUI.hl"; (* added 2013-06-13 *)
   "local/deformation.hl";
   "local/ODXLSTC.hl"; (* added 2013-06-13 *)
   "local/lunar_deform.hl"; (* updated 2013-06-11 *)
   "local/OCBICBY.hl"; (* added 2013-06-27 *)
   "local/YXIONXL2.hl"; (* 2013-06-26,. *)
   "local/EYYPQDW.hl"; (* 2013-07-08 *)
   "local/IMJXPHR.hl"; 
   "local/ZLZTHIC.hl"; (* 2013-07-10 *)
   "local/PQCSXWG.hl"; (* 2013-07-12 *)
   "local/NUXCOEA.hl";  (* 2013-07-14  *)
   "local/FEKTYIY.hl"; (* 2013-07-21 *)
   "local/AURSIPD.hl"; (* 2013-07-21 *)
   "local/PPBTYDQ.hl"; (* 2013-07-21 *)
   "local/AXJRPNC.hl"; (* 2013-07-21 *)
   "local/CUXVZOZ.hl"; (* 2013-07-22 *)
   "local/RRCWNSJ.hl"; (* 2013-07-27 *)
   "local/JCYFMRP.hl";(* 2013-07-27 *)
   "local/TFITSKC.hl";(* 2013-07-27 *)
   "local/CQAOQLR.hl";(* 2013-07-27 *)
   "local/JLXFDMJ.hl";(* 2013-07-27 *)
   "local/YRTAFYH.hl";  (* 2013-07-31 *)
   "local/WKEIDFT.hl"; (* 2013-07-31 *)
   "local/hexagons.hl"; (* 2013-07-31 *)
   "local/IUNBUIG.hl"; (* 2013-07-31 *)
   "local/OTMTOTJ.hl"; (* 2013-08-06 *)
   "local/HIJQAHA.hl"; (* 2013-08-06 *)
   "local/CNICGSF.hl"; (* 2013-08-06 *)
   "local/BKOSSGE.hl"; (* 2013-08-07 *)
   "local/JOTSWIX.hl"; (* 2013-08-11 *)
   "local/ARDBZYE.hl"; (* 2013-08-15 *)
   "local/AUEAHEH.hl"; (* 2013-08-15 *)
   "local/VASYYAU.hl"; (* 2013-08-15 *)
   "local/MIQMCSN.hl"; (* 2013-08-15 *)
   "local/JEJTVGB.hl"; (* 2013-08-15 *)

   (* these files are loaded earlier if LP files are loaded. 
   Secondary load: *)
   "../formal_lp/hypermap/ssreflect/list_hypermap-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_gen_theory-compiled.hl";
   "../formal_lp/hypermap/ssreflect/list_hypermap_iso-compiled.hl";
   "../formal_lp/hypermap/computations/more_theory-compiled.hl";
   "local/RNSYJXM-compiled.hl";
   (* end secondary load  *)

   "tame/tame_defs2.hl";
   "tame/tame_list.hl";
   "tame/import_tame_classification.hl"; 
   "tame/more_tame_concl.hl";
   "tame/OXAXUCS.hl";
   "tame/ASFUTBF.hl"; 
   "tame/ELLLNYZ.hl";
   "tame/WMLNYMD.hl";
   "tame/DPZGBYF.hl";
   "tame/AUQTZYZ.hl";
   "tame/AUQTZYZ_list.hl"; 
   "tame/RXOKSKC.hl";

   (* 2014-03, HLT , TCH *)
   "tame/DANGEYJ.hl";
   "tame/JCAJYDU.hl";
   "tame/PWSSRAT.hl"; 
   "tame/OHCGKFU.hl";
   "tame/PPLHULJ.hl";
   "tame/NCVIBWU.hl";
   "tame/QCDVKEA.hl";
   "tame/PBFLHET.hl";
   "tame/PNXVWFS.hl";
   "tame/DIOWAAS.hl";
   "tame/RYIUUVK.hl";
   "tame/KBWPBHQ.hl";
   "tame/MEEIXJO.hl";

   (* 2014-04 *)
   "tame/OBDATYB.hl";
   "tame/LEBHIRJ.hl";   
   "tame/HOJODCM.hl";

   "tame/AQ1.hl";
   "tame/AQ23.hl";
   "tame/AQ4.hl";
   "tame/AQ56.hl";
   "tame/AQ7.hl";
   (* 2014-05 -- 2014-07 *)
   "tame/AQ8.hl";
   "tame/AQ9.hl";
   "tame/AQ10.hl";
   "tame/AQ11.hl";
   "tame/AQ12.hl";
   "tame/AQ13.hl";

   (* backwards style proof extending over several files *)
   "tame/reduction1.hl";
   "tame/reduction2.hl";
   "tame/more_lemma1.hl";
   "tame/reduction3.hl";
   "tame/more_lemma2.hl"; 
   "tame/reduction4.hl";
   "tame/betwn_corek_z_x.hl";
   "tame/betwn_core0_z_y.hl";
   "tame/reduction5.hl";

   (* these files are loaded earlier if LP files are loaded. 
   Secondary load: *)
   "../formal_lp/hypermap/ineqs/lp_ineqs_defs.hl";
   "../formal_lp/ineqs/constants_approx.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_proofs-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_main_estimate-compiled.hl";
   "../formal_lp/hypermap/ineqs/lp_ineqs_quads-compiled.hl";
   (* end secondary load  *)

   (* integration and compatibility checks *)
   "tame/ssreflect/KCBLRQC-compiled.hl";
   "tame/ssreflect/MQMSMAB-compiled.hl";

   "packing/flyspeck_devol.hl";
   (* "general/serialization.hl"; *)
   "general/kepler_spec.hl";
   "general/the_main_statement.hl"; 
   "general/audit_formal_proof.hl";
   "general/the_kepler_conjecture.hl"; 


    (*   This uses the "serialization" version of HOL Light to prove
       |- the_nonlinear_inequalities *)
   "general/serialization.hl";
   "nonlinear/mk_all_ineq.hl";


  ];;

let rec cut_at s acc = function
  | [] -> (List.rev acc,[])
  | b::bs as a -> if (s =b) then (List.rev acc,a) else cut_at s (b::acc) bs;;

(* The main statement verification skips
   the linear programming and proof of "goodness",
   the definition of the archive,
   the serialized nonlinear inequalities 
*)

let build_sequence_main_statement =
  let (r1,r1') = cut_at "../formal_lp/hypermap/arith_link.hl" [] build_sequence_full in
  let (r2,r2') = cut_at "tame/linear_programming_results.hl" [] r1' in
  let b =     r1 @ (if r2' = [] then [] else tl r2') in
  let skip = [   "general/the_kepler_conjecture.hl"; 
		 "nonlinear/mk_all_ineq.hl";
	     ] in
    filter (fun t -> not(mem t skip)) b;;

let build_sequence_the_nonlinear_inequalities =
      build_sequence_main_statement @  ["nonlinear/mk_all_ineq.hl"];;

let build_sequence_nonserial = 
  filter (fun t -> not (t =    "nonlinear/mk_all_ineq.hl"))
    build_sequence_full;;



end;;
